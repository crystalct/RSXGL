# Makefile.in generated by automake 1.11.6 from Makefile.am.
# src/samples/rsxglgears/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 Free Software
# Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/rsxgl
pkgincludedir = $(includedir)/rsxgl
pkglibdir = $(libdir)/rsxgl
pkglibexecdir = $(libexecdir)/rsxgl
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
DIST_COMMON = $(srcdir)/../samples.am $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
noinst_PROGRAMS = rsxglgears.elf$(EXEEXT)
subdir = src/samples/rsxglgears
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/extpkg.m4 \
	$(top_srcdir)/m4/ps3dev.m4 $(top_srcdir)/m4/psl1ght.m4 \
	$(top_srcdir)/m4/toolchain.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
am_rsxglgears_elf_OBJECTS = rsxglgears_elf-main.$(OBJEXT) \
	rsxglgears_elf-math3d.$(OBJEXT)
rsxglgears_elf_OBJECTS = $(am_rsxglgears_elf_OBJECTS)
rsxglgears_elf_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(rsxglgears_elf_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(rsxglgears_elf_SOURCES)
DIST_SOURCES = $(rsxglgears_elf_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/scristaldi/RSXGL.Work/config/missing --run aclocal-1.11
AMTAR = $${TAR-tar}
AUTOCONF = ${SHELL} /home/scristaldi/RSXGL.Work/config/missing --run autoconf
AUTOHEADER = ${SHELL} /home/scristaldi/RSXGL.Work/config/missing --run autoheader
AUTOMAKE = ${SHELL} /home/scristaldi/RSXGL.Work/config/missing --run automake-1.11
AWK = gawk
CC = /usr/local/ps3dev/ppu/bin/ppu-gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CGC := /usr/bin/cgc
CPPFLAGS = 
CXX = /usr/local/ps3dev/ppu/bin/ppu-g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -std=c++11
CYGPATH_W = cygpath -w
DEFS = -DPACKAGE_NAME=\"rsxgl\" -DPACKAGE_TARNAME=\"rsxgl\" -DPACKAGE_VERSION=\"0.1\" -DPACKAGE_STRING=\"rsxgl\ 0.1\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"rsxgl\" -DVERSION=\"0.1\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT := 
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LFTP := 
LIBDRM_LOCATION = ${top_srcdir}/extsrc/drm
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/scristaldi/RSXGL.Work/config/missing --run makeinfo
MESA_LOCATION = ${top_srcdir}/extsrc/mesa
MKDIR_P = /usr/bin/mkdir -p
NV40ASM = ${bindir}/nv40asm
OBJEXT = o
PACKAGE = rsxgl
PACKAGE_BUGREPORT = 
PACKAGE_NAME = rsxgl
PACKAGE_STRING = rsxgl 0.1
PACKAGE_TARNAME = rsxgl
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATCH = /usr/bin/patch
PATH_SEPARATOR = :
PKG := /usr/local/ps3dev/bin/pkg.py
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
PPU_CXXLIB = /usr/local/ps3dev/ppu/lib/gcc/powerpc64-ps3-elf/7.2.0/../../../../powerpc64-ps3-elf/lib/libstdc++.a
PS3DEV = /usr/local/ps3dev
PSL1GHT = /usr/local/ps3dev/psl1ght
PSL1GHT_CPPFLAGS = -I/usr/local/ps3dev/psl1ght/ppu/include
PSL1GHT_LDFLAGS = -L/usr/local/ps3dev/psl1ght/ppu/lib
PSL1GHT_PATH = /usr/local/ps3dev/bin
PWDCMD = /usr/bin/pwd
PYTHON = /usr/bin/python
RANLIB = /usr/local/ps3dev/ppu/bin/ppu-ranlib
RSXGL_CONFIG_RSX_compatibility = 0
RSXGL_CONFIG_samples_host_ip = 
RSXGL_CONFIG_samples_host_port = 0
RSXGL_SAMPLES = rsxgltest rsxglgears
RSXGL_SUBDIRS = extsrc/mesa include src/cgcomp src/drm src/nouveau src/nvfx src/library src/samples
RSYNC = /usr/bin/rsync
SELF := /usr/local/ps3dev/bin/fself.py
SELF_NPDRM := /usr/local/ps3dev/bin/make_self_npdrm
SET_MAKE = 
SFO := /usr/local/ps3dev/bin/sfo.py
SHELL = /bin/sh
SPRX := /usr/local/ps3dev/bin/sprxlinker
STRIP = /usr/local/ps3dev/ppu/bin/ppu-strip
VERSION = 0.1
XARGS = /usr/bin/xargs
XXD = 
abs_builddir = /home/scristaldi/RSXGL.Work/src/samples/rsxglgears
abs_srcdir = /home/scristaldi/RSXGL.Work/src/samples/rsxglgears
abs_top_builddir = /home/scristaldi/RSXGL.Work
abs_top_srcdir = /home/scristaldi/RSXGL.Work
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/scristaldi/RSXGL.Work/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /usr/bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
ppu_AR = /usr/local/ps3dev/ppu/bin/ppu-ar
ppu_AS = /usr/local/ps3dev/ppu/bin/ppu-as
ppu_CC = /usr/local/ps3dev/ppu/bin/ppu-gcc
ppu_CFLAGS = 
ppu_CPPFLAGS = 
ppu_CXX = /usr/local/ps3dev/ppu/bin/ppu-g++
ppu_CXXFLAGS = 
ppu_LDFLAGS = 
ppu_LIBS = 
ppu_PATH = /usr/local/ps3dev/ppu/bin
ppu_PKG_CONFIG_PATH = /usr/local/ps3dev/ppu/lib/pkgconfig
ppu_RANLIB = /usr/local/ps3dev/ppu/bin/ppu-ranlib
ppu_STRIP = /usr/local/ps3dev/ppu/bin/ppu-strip
ppu_TOOLCHAIN_PREFIX = ppu
ppu_bindir = /usr/local/ps3dev/ppu/bin
ppu_datadir = /usr/local/ps3dev/ppu/share
ppu_datarootdir = /usr/local/ps3dev/ppu/share
ppu_includedir = /usr/local/ps3dev/ppu/include
ppu_libdir = /usr/local/ps3dev/ppu/lib
ppu_libpng_CPPFLAGS = -I/usr/local/ps3dev/portlibs/ppu/include/libpng14 
ppu_libpng_LDFLAGS = -L/usr/local/ps3dev/portlibs/ppu/lib 
ppu_libpng_LIBS = -lpng14 
ppu_mandir = /usr/local/ps3dev/ppu/man
ppu_portlibs_PKG_CONFIG_PATH = /usr/local/ps3dev/portlibs/ppu/lib/pkgconfig
ppu_sbindir = /usr/local/ps3dev/ppu/sbin
ppu_sysconfdir = /usr/local/ps3dev/ppu/etc
ppu_zlib_CPPFLAGS = -I/usr/local/ps3dev/portlibs/ppu/include 
ppu_zlib_LDFLAGS = -L/usr/local/ps3dev/portlibs/ppu/lib 
ppu_zlib_LIBS = -lz 
ppuprefix = /usr/local/ps3dev/ppu
prefix = /usr/local/ps3dev/ppu
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../../../
top_builddir = ../../..
top_srcdir = ../../..
AR = /usr/local/ps3dev/ppu/bin/ppu-ar
AS = /usr/local/ps3dev/ppu/bin/ppu-as
CXXLD = PSL1GHT="/usr/local/ps3dev/psl1ght" "/usr/local/ps3dev/ppu/bin/ppu-g++"
SFOXML := ../../../src/samples/sfo.xml
ICON0 := ../../../src/samples/brewcrab.png
local_NV40ASM = $(top_builddir)/src/cgcomp/nv40asm
NV40C = $(top_builddir)/src/cgcomp/nv40c
SUFFIXES = .bin _bin.o _bin.h .png _png.o _png.h .vcg .fcg .vert .frag _vpo.o _fpo.o _vpo.h _fpo.h .vpo .fpo
vertex_shaders = $(filter %.vert,$(notdir $(1)))
fragment_shaders = $(filter %.frag,$(notdir $(1)))
vertex_shader_objs = $(1:.vert=_vpo.o)
fragment_shader_objs = $(1:.frag=_fpo.o)
vertex_shader_headers = $(1:.vert=_vert.h)
fragment_shader_headers = $(1:.frag=_frag.h)
shader_objs = $(call vertex_shader_objs,$(call vertex_shaders,$(1))) $(call fragment_shader_objs,$(call fragment_shaders,$(1)))
shader_headers = $(call vertex_shader_headers,$(call vertex_shaders,$(1))) $(call fragment_shader_headers,$(call fragment_shaders,$(1)))
png_images = $(filter %.png,$(notdir $(1)))
png_image_objs = $(1:.png=_png.o)
png_image_headers = $(1:.png=_png.h)
image_objs = $(call png_image_objs,$(call png_images,$(1)))
image_headers = $(call png_image_headers,$(call png_images,$(1)))
eigen_LOCATION = $(top_srcdir)/extsrc/eigen
eigen_CPPFLAGS = -I$(eigen_LOCATION)
sources = rsxglglears.c
rsxglgears_elf_DEPENDENCIES = $(top_builddir)/src/library/libEGL.a $(top_builddir)/src/library/libGL.a
rsxglgears_elf_SOURCES = main.c	math3d.cc


# rsxglgears.vert rsxglgears.frag
rsxglgears_elf_CPPFLAGS = -D__RSX__ -I\$(top_srcdir)/include $(eigen_CPPFLAGS) $(PSL1GHT_CPPFLAGS) -I$(top_srcdir)/include \
		-I$(top_srcdir)/src/library -I$(top_builddir)/src/library -I$(top_srcdir)/src/samples/rsxgltest

rsxglgears_elf_CFLAGS = -std=gnu99 -fgnu89-inline -O3
rsxglgears_elf_LDFLAGS = -L$(top_builddir)/src/library $(PSL1GHT_LDFLAGS)
rsxglgears_elf_LDADD = -lGL -lEGL -lrsx -lgcm_sys -lnet -lio -lsysutil -lsysmodule -lrt -llv2
TITLE := RSXGLGEARS
APPID := TSTRSXGL1
CONTENTID := UP0001-$(APPID)_00-0000000000000000
PKGFILES := release
all: all-am

.SUFFIXES:
.SUFFIXES: .bin _bin.o _bin.h .png _png.o _png.h .vcg .fcg .vert .frag _vpo.o _fpo.o _vpo.h _fpo.h .vpo .fpo .c .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../samples.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/samples/rsxglgears/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/samples/rsxglgears/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../samples.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
rsxglgears.elf$(EXEEXT): $(rsxglgears_elf_OBJECTS) $(rsxglgears_elf_DEPENDENCIES) $(EXTRA_rsxglgears_elf_DEPENDENCIES) 
	@rm -f rsxglgears.elf$(EXEEXT)
	$(rsxglgears_elf_LINK) $(rsxglgears_elf_OBJECTS) $(rsxglgears_elf_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/rsxglgears_elf-main.Po
include ./$(DEPDIR)/rsxglgears_elf-math3d.Po
#include ./$(DEPDIR)/rsxglgears_elf-rsxglgears.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

rsxglgears_elf-main.o: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -MT rsxglgears_elf-main.o -MD -MP -MF $(DEPDIR)/rsxglgears_elf-main.Tpo -c -o rsxglgears_elf-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
	$(am__mv) $(DEPDIR)/rsxglgears_elf-main.Tpo $(DEPDIR)/rsxglgears_elf-main.Po
#	source='../rsxgltest/main.c' object='rsxglgears_elf-main.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -c -o rsxglgears_elf-main.o `test -f '../rsxgltest/main.c' || echo '$(srcdir)/'`../rsxgltest/main.c

rsxglgears_elf-main.obj: main.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -MT rsxglgears_elf-main.obj -MD -MP -MF $(DEPDIR)/rsxglgears_elf-main.Tpo -c -o rsxglgears_elf-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
	$(am__mv) $(DEPDIR)/rsxglgears_elf-main.Tpo $(DEPDIR)/rsxglgears_elf-main.Po
#	source='../rsxgltest/main.c' object='rsxglgears_elf-main.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -c -o rsxglgears_elf-main.obj `if test -f '../rsxgltest/main.c'; then $(CYGPATH_W) '../rsxgltest/main.c'; else $(CYGPATH_W) '$(srcdir)/../rsxgltest/main.c'; fi`

#rsxglgears_elf-rsxglgears.o: rsxglgears.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -MT rsxglgears_elf-rsxglgears.o -MD -MP -MF $(DEPDIR)/rsxglgears_elf-rsxglgears.Tpo -c -o rsxglgears_elf-rsxglgears.o `test -f 'rsxglgears.c' || echo '$(srcdir)/'`rsxglgears.c
#	$(am__mv) $(DEPDIR)/rsxglgears_elf-rsxglgears.Tpo $(DEPDIR)/rsxglgears_elf-rsxglgears.Po
#	source='rsxglgears.c' object='rsxglgears_elf-rsxglgears.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -c -o rsxglgears_elf-rsxglgears.o `test -f 'rsxglgears.c' || echo '$(srcdir)/'`rsxglgears.c

#rsxglgears_elf-rsxglgears.obj: rsxglgears.c
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -MT rsxglgears_elf-rsxglgears.obj -MD -MP -MF $(DEPDIR)/rsxglgears_elf-rsxglgears.Tpo -c -o rsxglgears_elf-rsxglgears.obj `if test -f 'rsxglgears.c'; then $(CYGPATH_W) 'rsxglgears.c'; else $(CYGPATH_W) '$(srcdir)/rsxglgears.c'; fi`
#	$(am__mv) $(DEPDIR)/rsxglgears_elf-rsxglgears.Tpo $(DEPDIR)/rsxglgears_elf-rsxglgears.Po
#	source='rsxglgears.c' object='rsxglgears_elf-rsxglgears.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(rsxglgears_elf_CFLAGS) $(CFLAGS) -c -o rsxglgears_elf-rsxglgears.obj `if test -f 'rsxglgears.c'; then $(CYGPATH_W) 'rsxglgears.c'; else $(CYGPATH_W) '$(srcdir)/rsxglgears.c'; fi`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

rsxglgears_elf-math3d.o: math3d.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rsxglgears_elf-math3d.o -MD -MP -MF $(DEPDIR)/rsxglgears_elf-math3d.Tpo -c -o rsxglgears_elf-math3d.o `test -f 'math3d.cc' || echo '$(srcdir)/'`math3d.cc
	$(am__mv) $(DEPDIR)/rsxglgears_elf-math3d.Tpo $(DEPDIR)/rsxglgears_elf-math3d.Po
#	source='../rsxgltest/math3d.cc' object='rsxglgears_elf-math3d.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsxglgears_elf-math3d.o `test -f '../rsxgltest/math3d.cc' || echo '$(srcdir)/'`../rsxgltest/math3d.cc

rsxglgears_elf-math3d.obj: math3d.cc
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rsxglgears_elf-math3d.obj -MD -MP -MF $(DEPDIR)/rsxglgears_elf-math3d.Tpo -c -o rsxglgears_elf-math3d.obj `if test -f 'math3d.cc'; then $(CYGPATH_W) 'math3d.cc'; else $(CYGPATH_W) '$(srcdir)/math3d.cc'; fi`
	$(am__mv) $(DEPDIR)/rsxglgears_elf-math3d.Tpo $(DEPDIR)/rsxglgears_elf-math3d.Po
#	source='../rsxgltest/math3d.cc' object='rsxglgears_elf-math3d.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(rsxglgears_elf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rsxglgears_elf-math3d.obj `if test -f '../rsxgltest/math3d.cc'; then $(CYGPATH_W) '../rsxgltest/math3d.cc'; else $(CYGPATH_W) '$(srcdir)/../rsxgltest/math3d.cc'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) all-local
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-local clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am all-local check check-am clean \
	clean-generic clean-local clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am


define bin2o
	$(PS3DEV)/bin/bin2s -a 64 $< | $(AS) -o $(@)
	echo "extern const uint8_t" `(echo $(<F) | sed -e 's/^\([0-9]\)/_\1/' | tr . _)`"_end[];" > `(echo $(<F) | tr . _)`.h
	echo "extern const uint8_t" `(echo $(<F) | sed -e 's/^\([0-9]\)/_\1/' | tr . _)`"[];" >> `(echo $(<F) | tr . _)`.h
	echo "extern const uint32_t" `(echo $(<F) | sed -e 's/^\([0-9]\)/_\1/' | tr . _)`_size";" >> `(echo $(<F) | tr . _)`.h
endef

%.vpo: %.vcg
	@echo "[Compiling Cg vertex program] $(notdir $<)"
	@CGC=$(CGC) NV40ASM=$(local_NV40ASM) $(NV40C) -v -x cg -o $@ $^

%.fpo: %.fcg
	@echo "[Compiling Cg fragment program] $(notdir $<)"
	@CGC=$(CGC) NV40ASM=$(local_NV40ASM) $(NV40C) -f -x cg -o $@ $^

%.vpo: %.vert
	@echo "[Compiling GLSL vertex program] $(notdir $<)"
	@CGC=$(CGC) NV40ASM=$(local_NV40ASM) $(NV40C) -v -x glsl -o $@ $^

%.fpo: %.frag
	@echo "[Compiling GLSL fragment program] $(notdir $<)"
	@CGC=$(CGC) NV40ASM=$(local_NV40ASM) $(NV40C) -f -x glsl -o $@ $^

%_vert.h: %.vert
	@echo Generating $@ from $<
	@pushd $(abs_srcdir); rm -f $(abs_builddir)/$@; $(XXD) -i $(notdir $<) > $(abs_builddir)/$@; popd

%_frag.h: %.frag
	@echo Generating $@ from $<
	@pushd $(abs_srcdir); rm -f $(abs_builddir)/$@; $(XXD) -i $(notdir $<) > $(abs_builddir)/$@; popd

%.self: %.elf
	@echo "[SELF] $@"
	@$(STRIP) $< 
	@$(SPRX) $<
	@$(SELF) $< $@
	cp $@ $@.self

%.pkg: %.self
	@echo "[PKG] $(notdir $@)"
	@rm -rf $(builddir)/pkg
	@mkdir -p $(builddir)/pkg
	@mkdir -p $(builddir)/pkg/USRDIR
	@cp $(ICON0) $(builddir)/pkg/ICON0.PNG
	@$(SELF_NPDRM) $(basename $(notdir $<)).elf $(builddir)/pkg/USRDIR/EBOOT.BIN $(CONTENTID) >> /dev/null
	@$(SFO) --title "$(TITLE)" --appid "$(APPID)" -f $(SFOXML) $(builddir)/pkg/PARAM.SFO
	@if test -n $(PKGFILES) -a -d $(PKGFILES); then cp -rf $(PKGFILES)/* $(builddir)/pkg/; fi
	@$(PKG) --contentid $(CONTENTID) $(builddir)/pkg/ $@ >> /dev/null

%_bin.o: %.bin
	@echo "[bin2o]: $<"
	@$(bin2o)

%_bin.h: %_bin.o
	@echo "$<"

%_png.o: %.png
	@echo "[bin2o]: $<"
	@$(bin2o)

%_png.h: %_png.o
	@echo "$<"

%_vpo.o: %.vpo
	@echo "$(notdir $<)"
	@$(bin2o)

%_vpo.h: %_vpo.o
	@echo "$<"

%_fpo.o: %.fpo
	@echo "$(notdir $<)"
	@$(bin2o)

%_fpo.h: %_fpo.o
	@echo "$<"

transfer: pkg
	@if test -n "$(RSXGL_TARGET_IP)" -a -n "$(LFTP)" -a -f "$(abs_builddir)/pkg/USRDIR/EBOOT.BIN"; then echo "Transferring to $(RSXGL_TARGET_IP)";$(LFTP) -e "cd /dev_hdd0/game/$(APPID)/USRDIR/;put $(abs_builddir)/pkg/USRDIR/EBOOT.BIN;exit;" -u root,openbox $(RSXGL_TARGET_IP); fi
override ICON0		:=	$(srcdir)/../brewcrab.png

pkg: rsxglgears.pkg

all-local: pkg

clean-local:
	rm -rf pkg rsxglgears.self rsxglgears.pkg 

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
